<mah:MetroWindow x:Class="AutopilotQuick.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AutopilotQuick"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:dialogs="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" xmlns:converters="clr-namespace:AutopilotQuick.Converters" xmlns:notifications="clr-namespace:Notification.Wpf.Controls;assembly=Notification.Wpf"
                 mc:Ignorable="d"
        Loaded="MetroWindow_Loaded"
        WindowStartupLocation="CenterScreen"
        dialogs:DialogParticipation.Register="{Binding}"
        Style="{DynamicResource MahApps.Styles.MetroWindow.Clean}"
        TitleAlignment="Left"
        TitleCharacterCasing="Normal"
        Title="{Binding Title}" Height="450" Width="800">

    <mah:MetroWindow.Resources>
        <converters:BoolToColorConverter x:Key="StatusConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <SolidColorBrush x:Key="ProgressBrush" x:Name="ColorBrush" Color="{DynamicResource MahApps.Colors.Accent}"/>
        <Style BasedOn="{StaticResource MahApps.Styles.MetroHeader.Horizontal}" TargetType="mah:MetroHeader" />
        <Style x:Key="tooltipThing" BasedOn="{StaticResource MahApps.Styles.CheckBox}" TargetType="CheckBox">
            <Setter Property="ToolTip" Value="SharedPC"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="ToolTip" Value="Disabled because this device either does not have an autopilot, or azureAD record, or because we already applied the settings"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </mah:MetroWindow.Resources>
    <mah:MetroWindow.TitleTemplate>
        <DataTemplate>
            <TextBlock Margin="8 -1 1 0" VerticalAlignment="Center" FontFamily="{DynamicResource MahApps.Fonts.Family.Window.Title}" FontSize="{DynamicResource MahApps.Font.Size.Window.Title}" TextTrimming="CharacterEllipsis">
                <Run Text="AUTOPILOT" FontFamily="Lucida Sans Unicode, Verdana" FontWeight="Medium"/>
                <Run Text="QUICK" FontFamily="Lucida Sans Unicode, Verdana" FontWeight="Medium" FontStyle="Italic"/>
                <Run Text="{TemplateBinding Content}"/>
            </TextBlock>
        </DataTemplate>
    </mah:MetroWindow.TitleTemplate>

    <Window.InputBindings>
        <KeyBinding Key="F1" Command="{Binding EnableDeveloperModeCmd}" HotkeyManager.RegisterGlobalHotkey="False"/>
    </Window.InputBindings>
    
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5 0 0 0">
                <mah:MetroHeader Header="Take home?" VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="0 0 2 0"/>
                <mah:ToggleSwitch x:Name="TakeHomeToggle" OnContent="" OffContent="" VerticalContentAlignment="Center" Padding="5 0 5 0" MinWidth="0" HorizontalContentAlignment="Right" HorizontalAlignment="Right" VerticalAlignment="Center" Toggled="ToggleSwitch_Toggled" IsOn="{Binding TakeHomeToggleOn}" IsEnabled="{Binding TakeHomeToggleEnabled}"/>
            </StackPanel>
            
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5 0 0 0">
                <mah:MetroHeader Header="Shared PC:" VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="0 0 2 0"/>
                <CheckBox x:Name="SharedPCCheckbox" Style="{StaticResource tooltipThing}" IsThreeState="True" IsEnabled="{Binding SharedPCCheckboxEnabled}" IsChecked="{Binding SharedPCChecked, Mode=TwoWay}" Click="SharedPCSwitch_OnCheckedOrUncheck" mah:CheckBoxHelper.ForegroundUncheckedDisabled="{DynamicResource MahApps.Brushes.Gray2}" mah:CheckBoxHelper.ForegroundCheckedDisabled="{DynamicResource MahApps.Brushes.Gray2}" mah:CheckBoxHelper.ForegroundIndeterminateDisabled="{DynamicResource MahApps.Brushes.Gray2}"/>
            </StackPanel>
            
            <iconPacks:PackIconUnicons ToolTip="Sound Playing" Width="22" Height="22" Margin="5 0 5 0" VerticalAlignment="Center" HorizontalAlignment="Center">
                <iconPacks:PackIconUnicons.Style>
                    <Style TargetType="iconPacks:PackIconUnicons">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Playing}" Value="True">
                                <Setter Property="Kind" Value="Volume"/>
                                <Setter Property="Foreground" Value="LimeGreen"/>
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Playing}" Value="False">
                                <Setter Property="Kind" Value="Volume"/>
                                <Setter Property="Foreground" Value="Red"/>
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </iconPacks:PackIconUnicons.Style>
            </iconPacks:PackIconUnicons>
            
            <iconPacks:PackIconUnicons ToolTip="Headphone availability" Width="22" Height="22" Margin="5 0 5 0" VerticalAlignment="Center" HorizontalAlignment="Center">
                <iconPacks:PackIconUnicons.Style>
                    <Style TargetType="iconPacks:PackIconUnicons">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HeadphonesActive}" Value="{x:Static local:HeadphoneState.Connected}">
                                <Setter Property="Kind" Value="Headphones"/>
                                <Setter Property="Foreground" Value="LimeGreen"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding HeadphonesActive}" Value="{x:Static local:HeadphoneState.NotFound}">
                                <Setter Property="Kind" Value="HeadphoneSlash"/>
                                <Setter Property="Foreground" Value="Red"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding HeadphonesActive}" Value="{x:Static local:HeadphoneState.Disconnected}">
                                <Setter Property="Kind" Value="HeadphoneSlash"/>
                                <Setter Property="Foreground" Value="Yellow"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding HeadphonesActive}" Value="{x:Static local:HeadphoneState.Loading}">
                                <Setter Property="Kind" Value="Headphones"/>
                                <Setter Property="Foreground" Value="Yellow"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </iconPacks:PackIconUnicons.Style>
            </iconPacks:PackIconUnicons>
            
            <iconPacks:PackIconMaterial ToolTip="Internet availability" Width="22" Height="22" Margin="5 0 5 0" VerticalAlignment="Center" HorizontalAlignment="Center">
                <iconPacks:PackIconMaterial.Style>
                    <Style TargetType="iconPacks:PackIconMaterial">
                        <Setter Property="Kind" Value="WifiOff"/>
                        <Setter Property="Foreground" Value="Yellow"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ConnectedToInternet}" Value="{x:Static local:InternetConnectionStatus.Loading}">
                                <Setter Property="Kind" Value="WifiSync"/>
                                <Setter Property="Foreground" Value="Yellow"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ConnectedToInternet}" Value="{x:Static local:InternetConnectionStatus.Connected}">
                                <Setter Property="Kind" Value="Wifi"/>
                                <Setter Property="Foreground" Value="LimeGreen"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ConnectedToInternet}" Value="{x:Static local:InternetConnectionStatus.Disconnected}">
                                <Setter Property="Kind" Value="WifiOff"/>
                                <Setter Property="Foreground" Value="Yellow"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ConnectedToInternet}" Value="{x:Static local:InternetConnectionStatus.NoAdapter}">
                                <Setter Property="Kind" Value="WifiRemove"/>
                                <Setter Property="Foreground" Value="Red"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </iconPacks:PackIconMaterial.Style>
            </iconPacks:PackIconMaterial>
            
            <Viewbox Width="22" Height="22" Margin="5 0 5 0">
                <local:BatteryIndicator/>
            </Viewbox>
            
            
            <Button VerticalAlignment="Center" ToolTip="Hotkeys" VerticalContentAlignment="Center" Click="HotKeyFlyoutButton_Click">
                <iconPacks:PackIconForkAwesome Kind="KeyboardOutline" Width="22" Height="22"/>
            </Button>

            <Button x:Name="ShutdownButton"  ToolTip="Power options" Click="ShutdownButton_OnClick" VerticalAlignment="Center" VerticalContentAlignment="Center">
                <iconPacks:PackIconMaterial Width="22"
                                          Height="22"
                                          Kind="Power" />
            </Button>

        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <mah:MetroWindow.Flyouts>
        <mah:FlyoutsControl x:Name="flyoutsControl">
            <mah:Flyout x:Name="HotKeyFlyout" Header="Hotkeys" Position="Right" Width="300">
                <TabControl Margin="10">
                    <TabItem Header="Normal">
                        <ListBox ItemsSource="{Binding NormalHotkeyList}" BorderBrush="Transparent" HorizontalContentAlignment="Stretch" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <mah:MetroHeader Header="{Binding Name}" VerticalAlignment="Center" mah:HeaderedControlHelper.HeaderVerticalContentAlignment="Center">
                                        <mah:HotKeyBox HorizontalContentAlignment="Center" Margin="0 0 5 0" MinWidth="50" HorizontalAlignment="Right" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="10 0 10 0" HotKey="{Binding HotKey}" Focusable="False"/>
                                    </mah:MetroHeader>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </TabItem>
                    <TabItem Header="Fun">
                        <ListBox ItemsSource="{Binding EggHotkeyList}" Grid.IsSharedSizeScope="True" BorderBrush="Transparent" HorizontalContentAlignment="Stretch" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <mah:MetroHeader Header="{Binding Name}" VerticalAlignment="Center" mah:HeaderedControlHelper.HeaderVerticalContentAlignment="Center">
                                        <mah:HotKeyBox HorizontalContentAlignment="Center" MinWidth="50" Margin="0 0 5 0" HorizontalAlignment="Right" VerticalAlignment="Center" VerticalContentAlignment="Center" Padding="10 0 10 0" HotKey="{Binding HotKey}" Focusable="False"/>
                                    </mah:MetroHeader>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </TabItem>
                </TabControl>
            </mah:Flyout>
        </mah:FlyoutsControl>
    </mah:MetroWindow.Flyouts>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition Width="3*"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="3*"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>

        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="2*"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Viewbox Grid.Row="0" Stretch="Uniform" MaxHeight="150" HorizontalAlignment="Left">
                <TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center">
                    <TextBlock.Inlines>
                        <Run Text="{Binding CurrentStepName}"/>
                    </TextBlock.Inlines>
                </TextBlock>
            </Viewbox>
            <TextBlock Grid.Row="1" FontSize="20" HorizontalAlignment="Stretch" VerticalAlignment="Top" TextWrapping="Wrap">
                <TextBlock.Inlines>
                    <Run Text="{Binding CurrentStepMessage}"/>
                </TextBlock.Inlines>
            </TextBlock>
            <mah:MetroProgressBar Grid.Row="2" x:Name="Bar1" Foreground="{StaticResource ProgressBrush}" IsIndeterminate="{Binding CurrentStepIndeterminate}" local:ProgressBarSmoother.SmoothValue="{Binding CurrentStepProgress}" VerticalAlignment="Top">
                <mah:MetroProgressBar.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard>
                            <Storyboard x:Name="RainbowStoryBoard" Storyboard.TargetName="Bar1" Storyboard.TargetProperty="Foreground.Color">
                                <ColorAnimationUsingKeyFrames Duration="00:00:06" RepeatBehavior="Forever">
                                    <EasingColorKeyFrame KeyTime="00:00:00" Value="Red"/>
                                    <EasingColorKeyFrame KeyTime="00:00:01" Value="Orange"/>
                                    <EasingColorKeyFrame KeyTime="00:00:02" Value="Yellow"/>
                                    <EasingColorKeyFrame KeyTime="00:00:03" Value="Green"/>
                                    <EasingColorKeyFrame KeyTime="00:00:04" Value="Blue"/>
                                    <EasingColorKeyFrame KeyTime="00:00:05" Value="Purple"/>
                                    <EasingColorKeyFrame KeyTime="00:00:06" Value="Red"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </mah:MetroProgressBar.Triggers>                
                
            </mah:MetroProgressBar>
        </Grid>
        <Grid Grid.Row="2" Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="8*"></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <StackPanel VerticalAlignment="Bottom">
                <TextBlock Text="{Binding CurrentTime}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Opacity="0.5"/>
                <mah:MetroProgressBar Foreground="{StaticResource ProgressBrush}" VerticalContentAlignment="Center" local:ProgressBarSmoother.SmoothValue="{Binding TotalProgress}" Grid.Column="0" IsIndeterminate="{Binding TotalStepIndeterminate}" VerticalAlignment="Bottom"/>
            </StackPanel>
        </Grid>


    </Grid>
</mah:MetroWindow>
